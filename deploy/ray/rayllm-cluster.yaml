# An unique identifier for the head node and workers of this cluster.
cluster_name: rayllm-deploy

# Cloud-provider specific configuration.
provider:
    type: azure
    region: eastus2
    cache_stopped_nodes: False
    ssh_private_key: C:\Users\utktiwar2\.ssh\id_rsa
    ssh_user: "clusterUser_bodhi-setup_bodhitsosapdev-gpu-ts-test"
docker:
    image: "anyscale/ray-llm:latest"
    container_name: "rayllm"
    run_options:
      - --entrypoint ""


# All the 'conda activate' are necessary to ensure we are in the
# python 3.10 conda env.
setup_commands:
    - echo "(conda activate || true)" >> ~/.bashrc

head_setup_commands:
    - (conda activate || true) && !pip install azure-mgmt-compute azure-core


worker_setup_commands: []

head_start_ray_commands:
    - (conda activate || true) && ray stop
    - (conda activate || true) && ulimit -n 65536; ray start --head --port=6379 --object-manager-port=8076 --autoscaling-config=~/ray_bootstrap_config.yaml --dashboard-host=0.0.0.0

worker_start_ray_commands:
    - (conda activate || true) && ray stop
    - export RAY_HEAD_IP && echo "export RAY_HEAD_IP=$10.244.3.14:8265" >> ~/.bashrc && (conda activate || true) && ulimit -n 65536; ray start --address=$10.244.3.14:8265:6379 --object-manager-port=8076

available_node_types:
  head_node_type:
    node_config:
      InstanceType: Standard_D4ds_v5
      BlockDeviceMappings: &mount
      - DeviceName: /dev/sda1
        Ebs:
            VolumeSize: 128
            VolumeType: gp3
    resources:
      head_node: 1
      instance_type_d4_v5: 1
  gpu_worker_nc4as_t4:
    node_config:
      InstanceType: Standard_NC4as_T4_v3
      BlockDeviceMappings: *mount
    resources:
      worker_node: 1
      instance_type_nc4as_t4_v3: 1
      accelerator_type_a10: 1
    min_workers: 1
    max_workers: 1
  cpu_worker:
    node_config:
      InstanceType: Standard_D4ds_v5
      BlockDeviceMappings: *mount
    resources:
      worker_node: 1
      instance_type_d4_v5: 1
      accelerator_type_cpu: 4
    min_workers: 1
    max_workers: 3
head_node_type: head_node_type
